{"version":3,"sources":["containers/Background/Background.js","hoc/Axu.js","components/Welcome/Image/Image.js","components/Welcome/Main/LoginForm/Input/Input.js","components/Welcome/Main/LoginForm/Button/Button.js","axios/axios.js","components/Welcome/Spinner/Spinner.js","history/history.js","components/Welcome/Main/LoginForm/LoginForm.js","components/Welcome/Main/RegisterForm/Input/Input.js","components/Welcome/Main/RegisterForm/Button/Button.js","components/Welcome/Main/RegisterForm/RegisterForm.js","components/Welcome/Main/Main.js","components/Welcome/Welcome.js","containers/AccountAction/AccountAction.js","components/HomePage/SideBar/Item/Item.js","components/HomePage/SideBar/SideBar.js","components/HomePage/Main/TodoMain/TodoMain.js","components/HomePage/Main/AddTodoMain/AddTodoMain.js","components/HomePage/Main/TasklistMain/TasklistMain.js","components/HomePage/Main/Main.js","components/HomePage/NavigationBar/DropMenu/DropMenuItem/DropMenuItem.js","components/HomePage/NavigationBar/DropMenu/DropMenu.js","components/HomePage/NavigationBar/Logo/Logo.js","components/HomePage/NavigationBar/Search/Search.js","components/HomePage/NavigationBar/SayHi/SayHi.js","components/HomePage/NavigationBar/DrawToggle/DrawToggle.js","components/HomePage/NavigationBar/NavigationBar.js","components/HomePage/Backdrop/Backdrop.js","components/HomePage/Modal/Modal.js","components/HomePage/AddTaskListPanel/InputTaskListArea/InputTaskListArea.js","components/HomePage/AddTaskListPanel/SubmitButton/SubmitButton.js","components/HomePage/AddTaskListPanel/AddTaskListPanel.js","components/HomePage/Inbox/Inbox.js","components/HomePage/Share/Tasklist/Row/Row.js","components/HomePage/Share/Tasklist/Tasklist.js","components/HomePage/Share/Share.js","components/HomePage/ShareTasklistPanel/ShareTasklistPanel.js","components/HomePage/WorkPlace/WorkPlace.js","components/HomePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["Background","className","this","props","children","Component","aux","image","Input","changeHandler","e","value","target","setData","label","type","onChange","button","onClick","clicked","title","token","store","get","client","uid","instance","axios","create","baseURL","headers","spinner","createBrowserHistory","forceRefresh","LoginForm","state","email","password","message","loading","setEmail","setState","setPassword","loginHandler","post","then","res","header","set","history","push","pathname","catch","error","response","data","errors","keyPress","handleKeys","onKeyEvent","map","mes","style","color","textAlign","marginTop","isRegistered","clickedRegisterButton","withRouter","disabled","RegisterForm","firstName","lastName","rightPassword","done","setFirstname","setLastname","checkConfirm","length","registerHandler","name","full_messages","keys","Object","iKeys","Number","i","Array","reduce","arr","el","concat","pressKey","clickedLoginButton","main","show","showRegisterForm","registered","showLoginForm","successfulRegister","Welcome","showRegisterFormHandler","showLoginFormHandler","loginStep","successful","AccountAction","item","click","icon","number","SideBar","op1","op2","op3","controller","faTasks","tasklists","clickTodo","faInbox","shared","clickInBox","faRetweet","share","clickShare","TodoMain","useState","check","checked","setChecked","changeTodo","setChangeTodo","todoName","setTodoName","todoNameTemporary","settodoNameTemporary","del","setDelete","useEffect","a","patch","tasklistId","id","updateDone","display","alignItems","justifyContent","fontFamily","fontWeight","faCheck","cursor","err","console","log","faEdit","faTimes","faTrash","delete","AddTodoMain","faPlus","placeholder","TaskListMain","todos","setTodos","setLoading","taskListTemporary","setTaskListTemporary","taskListName","setTaskListName","changeTasklist","setChangeTasklist","todoAddition","setTodoAddition","partner","setUser","request","fetchTodos","fetchData","user","user_id","cancelChangeTaskListHandler","addTodoHandler","JSON","stringify","opacity","fontSize","todo","edit","faTrashAlt","clickDeleteBtn","Main","taskLists","setTasklist","fetchTaskList","updateData","list","tasklist","Col","lg","Row","dropMenuItem","dropMenu","faAddressCard","faSignOutAlt","clickedSignOutButton","logo","clickedLogo","search","faSearch","sayHi","clickedDropDown","faAngleDown","drawToggle","NavigationBar","showDropMenu","refeshPage","backDrop","cancel","modal","transform","InputTaskListArea","submitButton","AddTaskListPanel","setTodo1Name","setTodo2Name","submitHandler","Inbox","is_write","write","setWrite","dele","put","taskListId","putData","task","width","margin","marginBottom","Tasklist","setShare","usersList","ob","renameKey","users","obj","old_key","new_key","defineProperty","getOwnPropertyDescriptor","row","s","task_list_id","padding","overflow","maxWidth","Share","lists","taskList","ShareTasklistPanel","submit","correctEmail","correctTaskList","setUserEmail","setTasklistName","bind","backgroundColor","outline","border","WorkPlace","setTaskLists","setMessage","tasklistName","todo1Name","todo2Name","showAddList","setShowAddList","setShared","setController","showShareList","setShowShareList","setId","editPermission","setEditPermission","setCorrectTaskList","setUsers","setCorrectEmail","taskId","setTaskId","share_count","object","trim","toDo1","toDo2","permission","faShareSquare","isLoggedIn","homePage","App","path","component","HomePage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7ff6e02.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Background.css';\nclass Background extends Component{\n    render(){\n        return(\n            <div className=\"Background\">\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default Background;","\nconst aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport './Image.css';\n\nconst image = (props) => (\n    <div className=\"Image\"></div>\n)\n\nexport default image;","import React, { Component } from 'react';\nimport './Input.css';\nimport Aux from '../../../../../hoc/Axu';\n\nclass Input extends Component {\n    changeHandler = (e) => {\n        let value = e.target.value;\n        this.props.setData(value);\n    }\n\n    render(){\n        return(\n            <Aux>\n                <div className=\"Input\">\n                    <div className=\"Block\">\n                        <label>{this.props.label}</label>\n                        <input type={this.props.type} onChange={this.changeHandler}/>\n                </div>\n            </div>\n        </Aux>\n        )\n    }\n}\n\nexport default Input;","import React from 'react';\nimport Aux from '../../../../../hoc/Axu';\nimport './Button.css';\n\nconst button = (props) => (\n    <Aux>\n        <button className={props.className} onClick={props.clicked}>{props.title}</button>\n    </Aux>\n)\n\nexport default button;","import axios from 'axios';\nimport store from 'store';\n\nconst token = store.get(\"access_token\");\nconst client = store.get(\"client\");\nconst uid = store.get(\"uid\");\n\nconst instance = axios.create({\n    baseURL: 'https://herokutuan.herokuapp.com',\n    headers: {'Authorization':'Bearer ya29.a0AfH6SMC3w1tXe7lCUECmZhkZZ1tRIaeYTrcF1B9_Bk7PFJcfbuxds7nEqowZQNqBs4_JBrnA9a2dDuY_r58jnUl0zgtBUZz95iTKwlVhvVzWgpaJzsiqD7045KO-NdLCa1TT7ZhZcP6npf_Ofb_Y-fkN9ZVgGjG',\n              'uid':`${uid}`,\n              'access-token':`${token}`,\n              'client':`${client}`,\n              'Content-Type': 'application/json'}\n})\n\nexport default instance;","import React from 'react';\nimport Aux from '../../../hoc/Axu';\nimport './Spinner.css';\n\nconst spinner = () => (\n    <Aux>\n        <div className=\"Spinner\"><div></div><div></div><div></div><div></div></div>\n    </Aux>\n)\n\nexport default spinner;","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory({forceRefresh:true}); ","import React, { Component } from 'react';\nimport Aux from '../../../../hoc/Axu';\nimport Input from './Input/Input';\nimport './LoginForm.css';\nimport Button from './Button/Button';\nimport axios from '../../../../axios/axios';\nimport Spinner from '../../Spinner/Spinner';\nimport store from 'store';\nimport { withRouter } from 'react-router-dom';\nimport history from '../../../../history/history';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nclass LoginForm extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n        message: false,\n        loading: false\n    }\n\n    setEmail = (email) => {\n        this.setState({email: email});\n    }\n\n    setPassword = (password) => {\n        this.setState({password: password});\n    }\n\n    loginHandler = () => {\n        this.setState({loading: true});\n        axios.post('/auth/sign_in', this.state)\n        .then((res) => {\n            this.setState({loading:false});\n            const header = res.headers;\n            store.set('isLoggedIn', true);\n            store.set('access_token', header['access-token']);\n            store.set('client', header.client);\n            store.set('uid', header.uid);\n            history.push({pathname:'/'});  \n        })\n        .catch((error) => {\n            this.setState({loading:false});\n            this.setState({message: error.response.data.errors});\n        })\n    }\n\n    keyPress = () => {\n        this.loginHandler();\n    }\n\n    render() {\n        const isLoggedIn = store.get(\"isLoggedIn\");\n        if(isLoggedIn === true){\n            return history.push(\"/\");\n        }\n        return (\n            <Aux>\n                <KeyboardEventHandler\n                    handleKeys={['enter']}\n                    onKeyEvent={this.keyPress}>\n                    <div className=\"LoginForm\">\n                        <h2 className=\"Title\">Login</h2>\n                        {this.state.message ? this.state.message.map(mes => <p key={mes} style={{color: \"red\", textAlign:\"center\", marginTop:\"3px\"}}>{mes}</p>) : \"\"}\n                        {this.props.isRegistered ? <p style={{color:\"#a8df65\", textAlign:\"center\"}}>Successful Register, Log In to continue !</p> : \"\"}\n                        <Input label=\"Email\" type=\"email\" setData={this.setEmail}/>\n                        <Input label=\"Password\" type=\"password\" setData={this.setPassword}/>\n                        <div className=\"ButtonGroup\">\n                            <Button className=\"LoginButton\" title=\"Login\" clicked={this.loginHandler}/>\n                            <Button className=\"RegisterButton\" title=\"Register\" clicked={this.props.clickedRegisterButton}/>\n                        </div>\n                        {this.state.loading ? <div className=\"SpinnerContainer\"><Spinner/></div> : \"\"}\n                    </div>\n                </KeyboardEventHandler>\n            </Aux>\n        )  \n    }\n} \nexport default withRouter(LoginForm);\n","import React, { Component } from 'react';\nimport './Input.css';\nimport Aux from '../../../../../hoc/Axu';\n\nclass Input extends Component{\n    changeHandler = (e) => {\n        let value = e.target.value;\n        this.props.setData(value);\n    }\n\n    render(){\n        return(\n            <Aux>\n                <div className=\"Input\">\n                    <div className=\"Block\">\n                        <label>{this.props.label}</label>\n                        {this.props.message ? <p></p> : <p style={{color: 'red'}}>Password does not match</p>}\n                        <input type={this.props.type} onChange={this.changeHandler}/>\n                </div>\n            </div>\n    </Aux>\n        )\n    }\n}\n\nexport default Input;","import React from 'react';\nimport Aux from '../../../../../hoc/Axu';\nimport './Button.css';\n\nconst button = (props) => (\n    <Aux>\n        <button className={props.className} onClick={props.clicked} disabled={props.disabled}>{props.title}</button>\n    </Aux>\n)\n\nexport default button;","import React, { Component } from 'react';\nimport Aux from '../../../../hoc/Axu';\nimport Input from './Input/Input';\nimport Button from './Button/Button';\nimport axios from '../../../../axios/axios';\nimport Spinner from '../../Spinner/Spinner';\nimport store from 'store';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nclass RegisterForm extends Component {\n    state = {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        rightPassword: true,\n        loading: false, \n        message: false,\n        done: false\n    }\n\n    setFirstname = (firstName) => {\n        this.setState({firstName: firstName})\n    }\n\n    setLastname = (lastName) => {\n        this.setState({lastName: lastName});\n    }\n\n    setEmail = (email) => {\n        this.setState({email: email});\n    }\n\n    setPassword = (password) => {\n        this.setState({password: password});\n    }\n\n    checkConfirm = (password) => {\n        if(password.length !== 0){\n            this.setState({rightPassword: password === this.state.password});\n        }\n    }\n\n    registerHandler = () => {\n        this.setState({loading: true});\n        if (this.state.rightPassword){\n            const data = {\n                name: this.state.firstName + this.state.lastName,\n                email: this.state.email,\n                password: this.state.password\n            }\n\n            axios.post('/auth', data)\n            .then((res) => {\n                this.setState({loading: false});\n                store.set('successfulRegister', true);\n                this.setState({done: true});\n                this.props.done(this.state.done);\n            })\n            .catch((error) => {\n                this.setState({loading: false});\n                const message = error.response.data.errors.full_messages;\n                let keys = Object.keys(message)\n                            .map(iKeys => Number(iKeys))\n                            .map(i => [...Array(message[i])])\n                            .reduce((arr, el) => {\n                                return arr.concat(el)\n                            })\n                            .map(mes => <p keys={mes} style={{color:\"red\", textAlign:\"center\", marginTop:\"3px\"}}>{mes}</p>)\n                this.setState({message: keys})\n            })\n        }\n    }\n\n    pressKey = () => {\n        this.registerHandler();\n    }\n\n    render() {\n        return(\n            <Aux>\n                <KeyboardEventHandler\n                    handleKeys={['enter']}\n                    onKeyEvent={this.pressKey}>\n                    <div className=\"RegisterForm\">\n                        <h2 className=\"Title\">Register</h2>\n                        {this.state.message}\n                        <Input label=\"First Name\" type=\"text\" setData={this.setFirstname} message={true}/>\n                        <Input label=\"Last Name\" type=\"text\" setData={this.setLastname} message={true}/>\n                        <Input label=\"Email\" type=\"email\" setData={this.setEmail} message={true}/>\n                        <Input label=\"Password\" type=\"password\" setData={this.setPassword} message={true}/>\n                        <Input label=\"Confirm Password\" type=\"password\" setData={this.checkConfirm} message={this.state.rightPassword}/>\n                        <div className=\"ButtonGroup\">\n                            <Button className=\"RegisterButton\" title=\"Register Now\" clicked={this.registerHandler}/>\n                            <Button className=\"LoginButton\" clicked={this.props.clickedLoginButton} title=\"Have an account\"/>\n                        </div>\n                        {this.state.loading ? <div className=\"SpinnerContainer\"><Spinner/></div> : \"\"}\n                    </div>\n                </KeyboardEventHandler>\n            </Aux>\n        )\n    }\n}\n\nexport default RegisterForm;","import React from 'react';\nimport './Main.css';\nimport LoginForm from './LoginForm/LoginForm';\nimport RegisterForm from './RegisterForm/RegisterForm';\n\nconst main = (props) => (\n    <div className=\"Main\">\n        {props.show ? <LoginForm \n                        clickedRegisterButton={props.showRegisterForm} \n                        isRegistered={props.registered}/> : \n                      <RegisterForm \n                        clickedLoginButton={props.showLoginForm}\n                        done={props.successfulRegister}/>}\n    </div>\n)\n\nexport default main;","import React, { Component } from 'react';\nimport Aux from '../../hoc/Axu';\nimport './Welcom.css';\nimport Image from './Image/Image';\nimport Main from './Main/Main';\n\nclass Welcome extends Component {\n\n    state = {\n        show: true,\n        successfulRegister: false\n    }\n\n    showRegisterFormHandler = () => {\n        this.setState({\n            show: false\n        })\n    }\n\n    showLoginFormHandler = () => {\n        this.setState({\n            show: true\n        })\n    }\n\n    loginStep = (successful) => {\n        if(successful){\n            this.setState({\n                show: true,\n                successfulRegister: true\n            })\n        }\n    }\n\n    render() {\n        return(\n        <Aux>\n            <div className=\"Welcome\">\n                <Main show={this.state.show} \n                      showRegisterForm={this.showRegisterFormHandler} \n                      showLoginForm={this.showLoginFormHandler}\n                      successfulRegister={this.loginStep}\n                      registered={this.state.successfulRegister}/>\n                <Image />\n            </div>\n        </Aux>)\n    }\n}\n\nexport default Welcome;","import React, { Component } from 'react';\nimport Background from '../Background/Background';\nimport Welcome from '../../components/Welcome/Welcome';\n\nclass AccountAction extends Component{\n    render(){\n        return(\n            <Background>\n                <Welcome/>\n            </Background>\n        )\n    }\n}\n\nexport default AccountAction;","import React from 'react';\nimport './Item.css';\nimport Aux from '../../../../hoc/Axu';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst item = (props) => (\n    <Aux>\n        <div className=\"Item\" onClick={props.click}>\n            <div className=\"Icon\">\n            <FontAwesomeIcon icon={props.icon} color={props.color}/>\n            </div>\n                <p className=\"Label\">{props.label}</p>\n                <p className=\"Number\">{props.number}</p>\n        </div>\n    </Aux>\n)\n\nexport default item;","import React from 'react';\nimport './SideBar.css';\nimport Aux from '../../../hoc/Axu';\nimport Item from './Item/Item';\nimport { faRetweet, faInbox, faTasks } from '@fortawesome/free-solid-svg-icons';\n\nfunction SideBar(props) {\n    let op1 = true;\n    let op2 = false;\n    let op3 = false;\n\n    if(props.controller === 0){\n        op1 = true;\n        op2 = false;\n        op3 = false;\n    }else if(props.controller === 1){\n        op1 = false;\n        op2 = true;\n        op3 = false;\n    }else{\n        op1 = false;\n        op2 = false;\n        op3 = true;\n    }\n\n    return (\n        <Aux>\n            <div className=\"SideBar\">\n                {op1 ? <Item icon={faTasks} label=\"Tasks\" number={props.tasklists} color=\"#5cb85c\" click={props.clickTodo}/> : <Item icon={faTasks} label=\"Todo\" number={props.tasklists} color=\"white\" click={props.clickTodo}/>}\n                {op2 ? <Item icon={faInbox} label=\"Inbox\" number={props.shared} color=\"#5cb85c\" click={props.clickInBox}/> : <Item icon={faInbox} label=\"Inbox\" number={props.shared} color=\"white\" click={props.clickInBox}/>}\n                {op3 ? <Item icon={faRetweet} label=\"Share\" number={props.share} color=\"#5cb85c\" click={props.clickShare}/> : <Item icon={faRetweet} label=\"Share\" number={props.share} color=\"white\" click={props.clickShare}/>}\n            </div>\n        </Aux>\n    )\n}\n\nexport default SideBar;","import React, { useEffect, useState } from 'react';\nimport './TodoMain.css';\nimport Aux from '../../../../hoc/Axu';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faEdit, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport axios from '../../../../axios/axios';\n\n\nfunction TodoMain(props) {\n\n    const [checked, setChecked] = useState(props.check);\n    const [changeTodo, setChangeTodo] = useState(false);\n    const [todoName, setTodoName] = useState(props.name);\n    const [todoNameTemporary, settodoNameTemporary] = useState(props.name);\n    const [del, setDelete] = useState(false);\n    \n    useEffect(() => {\n        async function updateDone() { \n            await axios.patch(`/task_lists/${props.tasklistId}/todos/${props.id}`, {\"done\": `${checked}`});\n        }\n        updateDone();\n    }, [checked]);\n\n    const changeTodos = () => {\n        setChangeTodo(true);\n    }\n\n    const cancelChangeTodos = () => {\n        setChangeTodo(false);\n        settodoNameTemporary(todoName);\n    }\n\n    const submitChangeTodos = () => {\n        axios.patch(`/task_lists/${props.tasklistId}/todos/${props.id}`, {\"name\":`${todoNameTemporary}`})\n        .then(res => {\n            setChangeTodo(false);\n            setTodoName(todoNameTemporary);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    const changeHandler = (e) => {\n        let value = e.target.value;\n        settodoNameTemporary(value);\n    }\n\n    const deleteTodos = () => {\n        axios.delete(`/task_lists/${props.tasklistId}/todos/${props.id}`)\n        .then(res => {\n            setDelete(true);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n        \n    }\n\n    return (\n        <Aux> \n\n            {\n                del ? \"\" :\n                <div className=\"TodoMain\">\n                <div className=\"TodoMainCheckbox\">\n                    {changeTodo ? <input type=\"text\" value={todoNameTemporary} onChange={changeHandler}/> : \n                    <div style={{display:\"flex\", alignItems:\"center\", justifyContent:\"space-around\"}}>\n                    <input \n                        type=\"checkbox\"\n                        checked={checked}\n                        onChange={() => setChecked(!checked)}/>\n                    <label style={{fontFamily: \"inherit\", fontWeight:\"100\"}}>{todoName}</label>\n                    </div>\n                    }\n                </div>\n                <div className=\"TodoMainIcon\">\n                    {changeTodo ? <FontAwesomeIcon icon={faCheck} style={{cursor:\"pointer\"}} onClick={submitChangeTodos}/> : <FontAwesomeIcon icon={faEdit} style={{cursor:\"pointer\"}} onClick={changeTodos}/>}\n                    {changeTodo ? <FontAwesomeIcon icon={faTimes} style={{cursor:\"pointer\"}} onClick={cancelChangeTodos}/> : <FontAwesomeIcon icon={faTrash} style={{cursor:\"pointer\"}} onClick={deleteTodos}/>}\n                </div>  \n            </div>\n            }  \n        </Aux>\n    )\n}\n\nexport default TodoMain;","import React from 'react';\nimport './AddTodoMain.css';\nimport Aux from '../../../../hoc/Axu';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\n\nfunction AddTodoMain(props) {\n\n    const changeHandler = (e) => {\n        let value = e.target.value;\n        props.setData(value);\n    }\n    \n    return (\n        <Aux>\n            <div className=\"AddTodoMain\">\n                <FontAwesomeIcon icon={faPlus} onClick={props.click} className=\"AddTodoMainBtn\"/>\n                <input type=\"text\" placeholder=\"Add more tasks\" onChange={changeHandler} value={props.value}/>\n            </div>\n        </Aux>\n    )\n}\n\nexport default AddTodoMain;","import React, { useEffect, useState } from 'react';\nimport './TasklistMain.css';\nimport Aux from '../../../../hoc/Axu';\nimport TodoMain from '../TodoMain/TodoMain';\nimport AddTodoMain from '../AddTodoMain/AddTodoMain';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport axios from '../../../../axios/axios';\nimport Spinner from '../../../Welcome/Spinner/Spinner';\nimport todo from '../../SideBar/Project/Todos/Todo/Todo';\n\nfunction TaskListMain(props) {\n\n    const [todos, setTodos] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [taskListTemporary, setTaskListTemporary] = useState(props.name);\n    const [taskListName, setTaskListName] = useState(props.name);\n    const [changeTasklist, setChangeTasklist] = useState(false);\n    const [list, setList] = useState([]);\n    const [todoAddition, setTodoAddition] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [partner, setPartner] = useState(false);\n    const [sharePermission, setSharePermission] = useState(false);\n    const [partnerId, setPartnerId] = useState(\"\");\n    const [user, setUser] = useState([]);\n\n    const changeHandler = (e) => {\n        let value = e.target.value;\n        setTaskListTemporary(value);\n    }\n\n\n    useEffect(() => {\n        async function fetchTodos() { \n            try {\n                const request = await axios.request(`/task_lists/${props.id}/todos`);\n                setTodos(request.data);\n            } catch (error) {\n                console.log(error);\n            }\n         }\n        fetchTodos();\n    },[loading]);\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const request = await axios.request('/users');\n                setUser(request.data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n\n        fetchData();\n    },[])\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const request = await axios.request('/users');\n                const users = request.data;\n                users.map(user => {\n                    let id = user.id;\n                    if(id === props.user_id){\n                        setEmail(user.email);\n                    }\n                })\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        fetchData();\n    }, []);\n\n    const submitChangeHandler = ()  => {\n        axios.patch(`/task_lists/${props.id}`, {\"name\":`${taskListTemporary}`})\n        .then(res => {\n            setChangeTasklist(false);\n            setTaskListName(taskListTemporary);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    const changeTaskListHandler = () => {\n        setChangeTasklist(true);\n    }\n\n    const cancelChangeTaskListHandler = (name) => {\n        setChangeTasklist(false);\n        setTaskListTemporary(taskListName);\n    }\n\n    const addTodoHandler = (id) => {\n        if(todoAddition === \"\"){\n            return;\n        }else{\n            setLoading(true);\n            axios.post(`/task_lists/${id}/todos`, JSON.stringify({\"name\": `${todoAddition}`}))\n            .then(res => {\n                setTodoAddition(\"\");\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        }\n    }\n\n    return(\n        <Aux>\n            <div className=\"TaskListMain\">\n                <div className=\"TaskListMainName\">\n                    {changeTasklist ? <input type=\"text\" style={{opacity:\"1\"}} value={taskListTemporary} onChange={changeHandler}/> : <h2 style={{opacity: \"1\"}}>{taskListName}  <span style={{color:\"black\", fontSize:\"10px\"}}>({todos.length})</span></h2> } \n                    <div className=\"TaskListMainNameIcon\" >\n                        {changeTasklist ? <FontAwesomeIcon icon={faCheck} onClick={submitChangeHandler}/> : <FontAwesomeIcon icon={faEdit} onClick={changeTaskListHandler}/>}\n                        {changeTasklist ? <FontAwesomeIcon icon={faTimes} onClick={cancelChangeTaskListHandler}/> : <FontAwesomeIcon icon={faTimes} onClick={cancelChangeTaskListHandler} style={{display:\"none\"}}/>}\n                    </div>\n                </div>\n                <div className=\"TodosMain\">\n                    {\n                        todos.map(todo => {\n                            return <TodoMain \n                                    check={todo.done}\n                                    name={todo.name}\n                                    id={todo.id + todo.name}\n                                    key={props.id}\n                                    tasklistId={props.id}/>\n                        })\n                    }\n                </div>\n                {props.edit ? (\n                <div>\n                <div>\n                    <AddTodoMain \n                        setData={setTodoAddition} \n                        click={() => addTodoHandler(props.id)}\n                        value={todoAddition}/>\n                    <div className=\"DeleteBtn\" >\n                        <FontAwesomeIcon \n                            icon={faTrashAlt} \n                            color=\"red\" \n                            onClick={props.clickDeleteBtn}/>\n                    </div>\n                </div>\n                <h6 style={{opacity:\"0\"}}>You do not have edit permission</h6>\n                </div>) : (\n                <div>\n                <div style={{opacity:\"0\"}}>\n                    <AddTodoMain \n                        setData={setTodoAddition} \n                        click={() => addTodoHandler(props.id)}\n                        value={todoAddition}/>\n                    <div className=\"DeleteBtn\" >\n                        <FontAwesomeIcon \n                            icon={faTrashAlt} \n                            color=\"red\" \n                            onClick={props.clickDeleteBtn}/>\n                    </div>\n                </div>\n                <h6 style={{opacity:\"1\"}}>You do not have edit permission</h6>\n                </div>)}\n                {props.user_id ? <h6 style={{textAlign:\"center\", color:\"black\"}}>Shared by {email}</h6> : null}\n                {partner ? <h6 style={{textAlign:\"center\", color:\"black\"}}>Sharing with {partner}</h6> : null}\n    \n            </div>\n        </Aux>  \n    )\n  }\n\nexport default TaskListMain;","import React, {useEffect, useState} from 'react';\nimport './Main.css';\nimport Aux from '../../../hoc/Axu';\nimport TaskListMain from './TasklistMain/TasklistMain';\nimport { Row, Col } from 'react-bootstrap';\nimport axios from '../../../axios/axios';\n\n\nfunction Main(props){\n\n    const [taskLists, setTasklist] = useState([props.tasklists]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        async function fetchTaskList(){\n            try {\n                const request = await axios.request('/task_lists');\n                setTasklist(request.data);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        fetchTaskList();\n    }, [loading]);\n\n    useEffect(() => {\n        async function updateData() {\n            setTasklist(props.tasklists)\n        }\n        updateData();\n    }, [props.tasklists])\n\n    const deleteTasklistHandler = (id) => {\n        setLoading(true);\n        axios.delete(`/task_lists/${id}`)\n        .then(res => {\n            setLoading(false);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n\n    const list = taskLists.map(tasklist => {\n        return <Col \n                    lg={3} \n                    key={tasklist.id}>\n                        <TaskListMain \n                            name={tasklist.name} \n                            id={tasklist.id} \n                            key={tasklist.id+tasklist.name}\n                            clickDeleteBtn={() => deleteTasklistHandler(tasklist.id)}\n                            edit={true}/>\n                </Col>\n    })\n\n    return (\n        <Aux>\n            <div className=\"MainDisplay\">\n                {props.children}\n                <div className=\"TaskListArea\">\n                    <Row>\n                        {list}\n                    </Row>\n                </div>\n            </div>\n        </Aux>\n    )\n}\n\nexport default Main;","import React from 'react';\nimport './DropMenuItem.css';\nimport Aux from '../../../../../hoc/Axu';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nconst dropMenuItem = (props) => (\n    <Aux>\n        <div className=\"DropMenuItem\" onClick={props.clicked}>\n            <FontAwesomeIcon icon={props.icon}/>\n<           p>{props.label}</p>\n        </div>\n    </Aux>\n)\n\nexport default dropMenuItem;","import React from 'react';\nimport './DropMenu.css';\nimport Aux from '../../../../hoc/Axu';\nimport { faAddressCard, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport DropMenuItem from './DropMenuItem/DropMenuItem';\n\nconst dropMenu = (props) => (\n    <Aux>\n        <div className=\"DropMenu\">\n            <DropMenuItem label=\"Profile\" icon={faAddressCard}/>\n            <DropMenuItem label=\"Log Out\" icon={faSignOutAlt} clicked={props.clickedSignOutButton}/>\n        </div>\n    </Aux>\n)\n\nexport default dropMenu;","import React from 'react';\nimport './Logo.css';\nimport Aux from '../../../../hoc/Axu';\n\nconst logo = (props) => (\n    <Aux>\n        <div className=\"Logo\" onClick={props.clickedLogo}>\n            <p>TO DO LIST v0.0</p>\n        </div>\n    </Aux>\n)\n\nexport default logo;","import React from 'react';\nimport './Search.css';\nimport Aux from '../../../../hoc/Axu';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\n\nconst search = (props) => (\n    <Aux>\n        <div className=\"Search\">\n                <FontAwesomeIcon icon={faSearch} color=\"black\"/>\n                <input type=\"text\" placeholder=\"Search\"/>\n        </div>\n    </Aux>\n)\n\nexport default search;","import React from 'react';\nimport './SayHi.css';\nimport Aux from '../../../../hoc/Axu';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\n\nconst sayHi = (props) => (\n    <Aux>\n        <div className=\"Sayhi\">\n            <p>{props.name}</p>\n            <div className=\"DropDown\" onClick={props.clickedDropDown}>\n                <FontAwesomeIcon icon={faAngleDown} color=\"black\"/>\n            </div>\n        </div>\n    </Aux>\n)\n\nexport default sayHi;","import React from 'react';\nimport './DrawToggle.css';\nimport Aux from '../../../../hoc/Axu';\n\nconst drawToggle = (props) => (\n    <Aux>\n        <div className=\"DrawerToggle\" onClick={props.clicked}>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    </Aux>\n)\n\nexport default drawToggle;","import React, { Component } from 'react';\nimport './NavigationBar.css';\nimport Aux from '../../../hoc/Axu';\nimport DropMenu from './DropMenu/DropMenu';\nimport Logo from './Logo/Logo';\nimport Search from './Search/Search';\nimport SayHi from './SayHi/SayHi';\nimport DrawToggle from './DrawToggle/DrawToggle';\n\nclass NavigationBar extends Component {\n    state = {\n        showDropMenu: false\n    }\n    showDropMenu = () => {\n        this.setState({\n            showDropMenu: !this.state.showDropMenu\n        });\n    }\n\n    render(){\n        return(\n            <Aux>\n                <div className=\"NavigationBar\">\n                    <DrawToggle/>\n                    <Logo clickedLogo={this.props.refeshPage}/>\n                    <Search/>\n                    <SayHi clickedDropDown={this.showDropMenu} name=\"Account\"/>\n                    {this.state.showDropMenu ? <DropMenu clickedSignOutButton={this.props.clickedSignOutButton}/> : \"\"}\n                </div>\n            </Aux>\n        )\n    }\n}\n\nexport default NavigationBar;","import React from 'react';\nimport './Backdrop.css';\nimport Aux from '../../../hoc/Axu';\n\nconst backDrop = (props) => (\n    <Aux>\n        {props.show ? <div className=\"BackDrop\" onClick={props.cancel}></div> : null}\n    </Aux>\n)\n\nexport default backDrop;","import React from 'react';\nimport './Modal.css';\nimport Aux from '../../../hoc/Axu';\nimport BackDrop from '../Backdrop/Backdrop';\n\nconst modal = (props) => (\n    <Aux>\n        <BackDrop \n            show={props.show}\n            cancel={props.cancel}/>\n        <div \n        className=\"Modal\"\n        style={{transform: props.show ? 'translateY(0)': 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0'\n            }}>\n            {props.children}\n        </div>\n    </Aux>\n)\n\nexport default modal;","import React from 'react';\nimport './InputTaskListArea.css';\nimport Aux from '../../../../hoc/Axu';\n\nfunction InputTaskListArea (props) {\n    const changeHandler = (e) => {\n        let value = e.target.value;\n        props.setData(value);\n    }\n    return (\n        <Aux>\n            <div className=\"InputTaskListArea\">\n                <label>{props.name}</label>\n                <input type=\"text\" onChange={changeHandler}/>\n            </div>\n        </Aux>\n    )\n\n}\n\n\n\nexport default InputTaskListArea;","import React from 'react';\nimport './SubmitButton.css';\n\nconst submitButton = (props) => (\n    <p className=\"AddButtonSubmit\" onClick={props.click}>Add</p>\n\n)\n\nexport default submitButton;","import React from 'react';\nimport './AddTaskListPanel.css';\nimport Aux from '../../../hoc/Axu';\nimport InputTaskListArea from './InputTaskListArea/InputTaskListArea';\nimport SubmitButton from './SubmitButton/SubmitButton';\nimport Spinner from '../../Welcome/Spinner/Spinner';\n\nfunction AddTaskListPanel (props) {\n\n    return (\n        <Aux>\n            <div className=\"AddTaskListPanel\">\n                <h2>Add Task List</h2>\n                {props.message ? <p style={{color:\"red\"}}>You need to enter tasklist name</p> : null}\n                <InputTaskListArea name=\"Task name\" setData={props.setTaskListName}/>\n                <InputTaskListArea name=\"Task 1\" setData={props.setTodo1Name}/>\n                <InputTaskListArea name=\"Task 2\" setData={props.setTodo2Name}/>\n                <SubmitButton click={props.submitHandler}/>\n                { props.loading ? <div className=\"SpinnerContainer\"><Spinner/></div> : null}\n            </div>\n        </Aux>\n    )\n}\n\nexport default AddTaskListPanel;","import React, {useEffect, useState} from 'react';\nimport Aux from '../../../hoc/Axu';\nimport TaskListMain from '../Main/TasklistMain/TasklistMain';\nimport { Row, Col } from 'react-bootstrap';\nimport axios from '../../../axios/axios';\n\n\nfunction Inbox(props){\n    const [taskLists, setTasklist] = useState([props.tasklists]);\n\n    useEffect(() => {\n        async function fetchData () {\n            try {\n                const request = await axios.request('/shared');\n                setTasklist(request.data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        fetchData();\n    }, [])\n\n    const list = taskLists.map(tasklist => {\n        return <Col \n                    lg={3} \n                    key={tasklist.id}>\n                        <TaskListMain \n                            name={tasklist.name} \n                            id={tasklist.id} \n                            key={tasklist.id+tasklist.name}\n                            edit={tasklist.is_write}\n                            user_id={tasklist.user_id}/>\n                </Col>\n    })\n\n    return (\n        <Aux>\n            <div className=\"MainDisplay\">\n                <div className=\"TaskListArea\">\n                    <Row>\n                        {list}\n                    </Row>\n                </div>\n            </div>\n        </Aux>\n    )\n}\n\nexport default Inbox;","import React, { useEffect } from 'react';\nimport TodoMain from '../../../Main/TodoMain/TodoMain';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt} from '@fortawesome/free-solid-svg-icons';\nimport { useState } from 'react';\nimport axios from '../../../../../axios/axios';\n\nfunction Row(props) {\n\n    const [write, setWrite] = useState(props.is_write);\n    const [dele, setDelete] = useState(false);\n    const [todos, setTodos] = useState([]);\n    const user = props.user;\n\n    useEffect(() => {\n        async function putData() {\n            try {\n                await axios.put(`/task_lists/${props.taskListId}/share/${props.user_id}`, {\"share_task\":{'is_write': `${write}`}});\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        putData();\n    },[write])\n\n    useEffect(() => {\n        async function fetchTodos() { \n            try {\n                const request = await axios.request(`/task_lists/${props.taskListId}/todos`);\n                setTodos(request.data);\n            } catch (error) {\n                console.log(error);\n            }\n         }\n        fetchTodos();\n    },[props.taskListId]);\n\n    const deleteShare = () => {\n        try {\n            axios.delete(`task_lists/${props.taskListId}/share/${props.user_id}`);\n            setDelete(true);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    let task = (<div className=\"TaskListMain\" style={{width:\"250px\", margin:\"10px\"}}>\n    <div className=\"TaskListMainName\">\n        <h2>{props.name}  <span style={{color:\"black\", fontSize:\"10px\"}}>({todos.length})</span></h2>\n    </div>\n    <div className=\"TodosMain\">\n        {\n            todos.map(todo => {\n                return <TodoMain \n                        check={todo.done}\n                        name={todo.name}\n                        id={todo.id}\n                        key={props.id}\n                        tasklistId={props.id}/>\n            })\n        }\n    </div>\n    <span style={{color:\"red\", marginBottom:\"20px\"}}>{user[props.id]}</span>\n    <div style={{display:\"flex\", alignItems:\"center\", justifyContent:\"space-around\", width:\"150px\"}}>\n            <input \n                type=\"checkbox\"\n                checked={write}\n                onChange={() => setWrite(!write)}/>\n            <label style={{fontFamily: \"inherit\", fontWeight:\"100\"}}>Edit Permission</label>\n    </div>\n    <div className=\"DeleteBtn\">\n            <FontAwesomeIcon \n                icon={faTrashAlt} \n                color=\"red\" \n                onClick={deleteShare}/>\n    </div>\n</div>);\n    return (\n        dele ? null: task\n    )\n}\nexport default Row;","import React, {useEffect, useState} from 'react';\nimport Aux from '../../../../hoc/Axu';\nimport axios from '../../../../axios/axios';\nimport Row from './Row/Row';\n\nfunction Tasklist(props) {\n\n    const [user, setUser] = useState({});\n    const [share, setShare] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const request = await axios.request(`/task_lists/${props.id}/share`);\n                setShare(request.data);\n            } catch (error) {\n                console.log(error);   \n            }\n        }\n        fetchData();\n    },[])\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const request = await axios.request('/users');\n                const usersList = request.data;\n                const list = usersList.map(user => {\n                    let id = user.id;\n                    let email = user.email;\n                    const ob = {id: email};\n                    renameKey(ob, \"id\", id);\n                    return ob;\n                });\n                const users = list.reduce((ob, el) => {\n                    return {...ob, ...el}\n                });\n                setUser(users);\n            } catch (error) {\n                console.log(error); \n            }\n        }\n        fetchData();\n    },[])\n\n    const renameKey = (obj, old_key, new_key) => {    \n        // check if old key = new key   \n            if (old_key !== new_key) {                   \n               Object.defineProperty(obj, new_key, // modify old key \n                                    // fetch description from object \n               Object.getOwnPropertyDescriptor(obj, old_key)); \n               delete obj[old_key];                // delete old key \n               } \n        }\n\n        const row = share.map(s => {\n            return <Row\n                        key={s.user_id}\n                        user={user}\n                        id={s.user_id}\n                        taskListId={s.task_list_id}\n                        is_write={s.is_write}\n                        name={props.name}\n                        user_id={s.user_id}/>\n        }) \n\n    return (\n        <Aux>\n            <div style={{marginBottom:\"15px\", padding:\"10px\", display:'flex', overflow:\"scroll\", maxWidth:\"1200px\"}}> \n                {row}\n            </div>\n        </Aux>\n    )\n}\n\nexport default Tasklist;\n","import React, {useState} from 'react';\nimport Aux from '../../../hoc/Axu';\nimport TaskList from './Tasklist/Tasklist';\n\n\n\nfunction Share(props){\n    const [taskLists, setTasklist] = useState([props.tasklists]);\n\n    const list = taskLists.reduce(taskList => {\n        return taskList;\n    })\n    \n    const lists = list.map(list => {\n        return <div\n                    key={list.id}>\n                        <TaskList\n                            name={list.name}\n                            id={list.id}\n                            key={list.id+list.name}/>\n                </div>\n    })\n\n    return (\n        <Aux>\n            <div className=\"MainDisplay\">\n                <div className=\"TaskListArea\">\n                        {lists}\n                </div>\n            </div>\n        </Aux>\n    )\n}\n\nexport default Share;","import React from 'react';\nimport Aux from '../../../hoc/Axu';\nimport InputTaskListArea from '../AddTaskListPanel/InputTaskListArea/InputTaskListArea';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Spinner from '../../Welcome/Spinner/Spinner';\nimport \"./ShareTasklistPanel.css\";\n\nfunction ShareTasklistPanel(props) {\n\n    let submit = false;\n\n    const setPermission = (e) => {\n        let value = e.target.value;\n        props.setData(value);\n    }\n\n    if(props.correctEmail && props.correctTaskList){\n        submit = true;\n    }\n\n    return(\n        <Aux>\n        <div className=\"AddTaskListPanel ShareTaskListPanel\">\n                <h2>Share Task List</h2>\n                {props.message ? <p style={{color:\"red\"}}>You need to enter tasklist name</p> : null}\n                <div style={{display:\"flex\", justifyContent:\"space-between\", alignItems:\"center\"}}>\n                    <InputTaskListArea name=\"User Email\" setData={props.setUserEmail}/>\n                    {props.correctEmail ? <FontAwesomeIcon icon={faCheck} color=\"#00ff00\"/> : <FontAwesomeIcon icon={faTimes} color=\"#ff0000\"/>}\n                </div>\n                <div style={{display:\"flex\", justifyContent:\"space-between\", alignItems:\"center\"}}>\n                    <InputTaskListArea name=\"TaskList Name\" setData={props.setTasklistName}/>\n                    {props.correctTaskList ? <FontAwesomeIcon icon={faCheck} color=\"#00ff00\"/> : <FontAwesomeIcon icon={faTimes} color=\"#ff0000\"/>}\n                </div>\n                <div style={{display:'flex', alignItems:\"center\", justifyContent:\"space-between\"}} onChange={setPermission.bind(this)}>\n                    <label>Edit Permission</label>\n                    <input type=\"radio\" value=\"editor\" name=\"name\"/>Editor\n                    <input type=\"radio\" value=\"watcher\" name=\"name\"/>Watcher\n                </div>\n                <button onClick={props.submitHandler} disabled={!submit} style={{width:\"30%\", padding:\"5px\", backgroundColor:\"#5cb85c\", color:\"white\", outline:\"none\", border:\"none\"}}>Submit</button>\n                { props.loading ? <div className=\"SpinnerContainer\"><Spinner/></div> : null}\n            </div>\n    </Aux>\n\n    )\n}\n\nexport default ShareTasklistPanel;","import React, {useState, useEffect} from 'react';\nimport './WorkPlace.css';\nimport Aux from '../../../hoc/Axu';\nimport SideBar from '../SideBar/SideBar';\nimport Main from '../Main/Main';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport store from 'store';\nimport history from '../../../history/history';\nimport Modal from '../Modal/Modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faShareSquare } from '@fortawesome/free-solid-svg-icons';\nimport AddTaskListPanel from '../AddTaskListPanel/AddTaskListPanel';\nimport axios from '../../../axios/axios';\nimport taskList from '../SideBar/Project/TaskList/TaskList';\nimport Inbox from '../Inbox/Inbox';\nimport Share from '../Share/Share';\nimport ShareTaskListPanel from '../ShareTasklistPanel/ShareTasklistPanel';\n\nfunction WorkPlace(props) {\n\n    const [taskLists, setTaskLists] = useState([]);\n    const [message, setMessage] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [tasklistName, setTasklistName] = useState(\"\");\n    const [todo1Name, setTodo1Name] = useState(\"\");\n    const [todo2Name, setTodo2Name] = useState(\"\");\n    const [showAddList, setShowAddList] =useState(false);\n    const [todoAddition, setTodoAddition] = useState(\"\");\n    const [shared, setShared] = useState([]);\n    const [share, setShare] = useState([]);\n    const [controller, setController] = useState(0);\n    const [showShareList, setShowShareList] = useState(false);\n    const [taskListName, setTaskListName] = useState(\"\");\n    const [id, setId] = useState(\"\");\n    const [editPermission, setEditPermission] = useState(false);\n    const [correctTaskList, setCorrectTaskList] = useState(false);\n    const [users, setUsers] = useState([]);\n    const [correctEmail, setCorrectEmail] = useState(false);\n    const [taskId, setTaskId] = useState(\"\");\n    const [shareMessage, setShareMessage] = useState(false);\n\n    useEffect(() => {\n        async function fetchTaskList(){\n            try {\n                const request = await axios.request('/task_lists');\n                setTaskLists(request.data);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        fetchTaskList();\n    }, [loading]);\n\n    useEffect(() => {\n        async function fetchTaskList(){\n            try {\n                const request = await axios.request('/task_lists');\n                setTaskLists(request.data);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        fetchTaskList();\n    }, []);\n\n    useEffect(() => {\n        async function fetchData () {\n            try {\n                const request = await axios.request('/task_lists');\n                const taskList = request.data;\n                const share = [];\n                taskList.map(taskList => {\n                    if(taskList.share_count !== 0){\n                        let object = {id: taskList.id, name: taskList.name};\n                        share.push(object);\n                    }\n                })\n                setShare(share);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        fetchData();\n    }, [loading]);\n\n    useEffect(() => {\n        async function fetchData () {\n            try {\n                const request = await axios.request('/shared');\n                setShared(request.data)\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        fetchData();\n    }, [])\n    \n    useEffect(() => {\n        async function fetchData () {\n            try {\n                const request = await axios.request('/users');\n                setUsers(request.data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        fetchData();\n    },[])\n\n    const logout = () => {\n        store.set('isLoggedIn', false);\n        store.set('access_token',\"\");\n        store.set('uid', \"\");\n        store.set('client', \"\");\n        history.push(\"/account\");\n    };\n    \n    const refeshPage = () => {\n        history.push('/account');\n    };\n\n    const clickTodoHandler = () => {\n        setController(0);\n    };\n\n    const clickInboxHandler = () => {\n        setController(1);\n    };\n\n    const clickShareHandler = () => {\n        setController(2);\n    };\n    \n    const setTasklistsName = (taskList) => {\n        setTasklistName(taskList.trim());\n    }\n\n    const setTodo1 = (toDo1) => {\n        setTodo1Name(toDo1.trim());\n    } \n\n    const setTodo2 = (toDo2) => {\n        setTodo2Name(toDo2.trim());\n    }\n\n    const setTodo = (todo) => {\n        setTodoAddition(todo.trim());\n    }\n\n    const setTaskListId = (taskList) => {\n        let tasklist = taskList;\n        if(correctTaskList === true){\n            setCorrectTaskList(false);\n        } \n        taskLists.map(taskList => {\n            if (taskList.name === tasklist){\n                setCorrectTaskList(true);\n                setTaskId(taskList.id);\n                return;\n            }\n        })\n    }\n\n    const setUserEmail = (email) => {\n        if(correctEmail === true){\n            setCorrectEmail(false);\n        }\n        users.map(user => {\n            if(user.email === email){\n                setCorrectEmail(true);\n                setId(user.id);\n            }\n        })   \n    }\n\n    const setEdit = (permission) => {\n        if(permission === \"editor\"){\n            setEditPermission(true);\n        } else if(permission === \"watcher\"){\n            setEditPermission(false);\n        }\n    }\n\n    const submitHandler = () => {\n        setLoading(true);\n        if(tasklistName === \"\"){\n            setMessage(true);\n            setLoading(false);\n        }else{\n            axios.post('/task_lists', JSON.stringify({\"name\": `${tasklistName}`}))\n            .then(res => {\n                const id = res.data.id;\n                if(todo1Name === \"\"){\n                    if(todo2Name === \"\"){\n                        setLoading(false);\n                        setMessage(false);\n                        setShowAddList(false);\n                        return;\n                    }else{\n                        axios.post(`/task_lists/${id}/todos`, JSON.stringify({\"name\": `${todo2Name}`}))\n                        .then(res => {\n                            setLoading(false);\n                            setMessage(false);\n                            setShowAddList(false);\n                        })\n                        .catch(err => {\n                            console.log(err);\n                        })\n                    }\n                }else{\n                    axios.post(`/task_lists/${id}/todos`, JSON.stringify({\"name\": `${todo1Name}`}))\n                    .then(res => {\n                        if(todo2Name === \"\"){\n                            setLoading(false);\n                            setMessage(false);\n                            setShowAddList(false);\n                            return;\n                        }else{\n                            axios.post(`/task_lists/${id}/todos`, JSON.stringify({\"name\": `${todo2Name}`}))\n                            .then(res => {\n                                setLoading(false);\n                                setMessage(false);\n                                setShowAddList(false);\n                            })\n                            .catch(err => {\n                                console.log(err);\n                            })\n                        }\n                    })  \n                    .catch(err => {\n                        console.log(err);\n                    }) \n                }\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    }\n\n    const cancelAddTaskListHandler = () => {\n        setLoading(false);\n        setMessage(false);\n        setShowAddList(false);\n    }\n\n    const addTasklistHandler = () => {\n        setShowAddList(true);\n    }\n\n    const shareTasklistHandler = () => {\n        setShowShareList(true);\n    }\n\n    const cancelShareTaskListHandler = () => {\n        setLoading(false);\n        setMessage(false);\n        setShowShareList(false);\n        setCorrectTaskList(false);\n        setCorrectEmail(false);\n        setId(\"\");\n        setEditPermission(false);\n        setTaskId(\"\");\n    }\n\n    const submitShare = () => {\n        setLoading(true);\n        axios.post(`/task_lists/${taskId}/share`, {\"user_id\": `${id}`, \"is_write\":`${editPermission}`})\n        .then(res => {\n            setLoading(false);\n            setShowShareList(false);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n    \n        return(\n            <Aux>\n                <div className=\"WorkPlace\">\n                    <SideBar\n                        clickTodo={clickTodoHandler}\n                        clickInBox={clickInboxHandler}\n                        clickShare={clickShareHandler}\n                        tasklists={taskLists.length}\n                        share={share.length}\n                        shared={shared.length}\n                        controller={controller}/>\n                    <div className=\"ActionArea\">\n                        <NavigationBar \n                            refeshPage={refeshPage} \n                            clickedSignOutButton={logout}/>\n                        {controller === 0 ? (<Main\n                            tasklists={taskLists}>\n                            <Modal \n                                show={showAddList}\n                                cancel={cancelAddTaskListHandler}>\n                            <AddTaskListPanel\n                                setTaskListName={setTasklistsName}\n                                setTodo1Name={setTodo1}\n                                setTodo2Name={setTodo2}\n                                submitHandler={submitHandler}\n                                loading={loading}\n                                message={message}/>\n                            </Modal>\n                            <Modal \n                                show={showShareList}\n                                cancel={cancelShareTaskListHandler}>\n                            <ShareTaskListPanel\n                                setUserEmail={setUserEmail}\n                                setTasklistName={setTaskListId}\n                                submitHandler={submitShare}\n                                loading={loading}\n                                correctTaskList={correctTaskList}\n                                correctEmail={correctEmail}\n                                setData={setEdit}/>\n                            </Modal>\n                            <div className=\"TaskListOption\">\n                                <FontAwesomeIcon \n                                    icon={faPlus} \n                                    onClick={addTasklistHandler}/>\n                                <FontAwesomeIcon \n                                    icon={faShareSquare}\n                                    onClick={shareTasklistHandler}/>\n                            </div>\n                        </Main>\n                    ) : null}\n                    {controller === 1 ? <Inbox tasklists={shared}/>  : null}\n                    {controller === 2 ? <Share tasklists={share}/> : null}\n                    </div>\n                </div>\n            </Aux>\n        )\n}\n\nexport default WorkPlace;","import React from 'react';\nimport WorkPlace from '../HomePage/WorkPlace/WorkPlace';\nimport store from 'store';\nimport history from '../../history/history';\n\nconst isLoggedIn = store.get(\"isLoggedIn\");\n\n\n\nconst homePage = () => {\n    if(isLoggedIn === false){   \n        return history.push('/account');\n    }\n    return(\n        <div className=\"HomePage\">\n            <WorkPlace/>\n        </div>\n        \n    )\n}\n\nexport default homePage;","import React from 'react';\nimport './App.css';\nimport AccountAction from './containers/AccountAction/AccountAction';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport HomePage from './components/HomePage/HomePage';  \nimport history from './history/history';\n\n\nfunction App() {\n  // const history = createBrowserHistory({forceRefresh: true});\n  return (\n    <Router history={history}>\n        <div className=\"App\"> \n          <Switch>\n            <Route path=\"/account\" component={AccountAction}/>\n            <Route path=\"/\" component={HomePage}/>\n          </Switch>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}